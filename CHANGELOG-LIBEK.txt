27 Dec 2019
  Add a vectorization macro to the synth configuration
    Synth.configure() can now use arrays to expand suitably labelled blocks of synth code.  The expansion generates copies of the targetted block of code
    with differing values taken from corresponding arrays passed as configuration parameters.
      (Example:  To define an additive synthesizer, synth code to evaluate a single partial [and accumulate the result] can be transformed by assigning arrays 
       of modifiers to corresponding frequency and magnitude config parameters)

24-26 Dec 2019
  Attach CSound 6.13.0 (WebAudio variant) to the project.  Plan is to have extensive sound synthesis capabilities (and a few reasonable presets on hand).
      (See https://csound.com/ for details)
  Synthesizer controller (utility for managing CSound resources, and instantiating, programming, configuring, and triggering synth operations)

20 Dec 2019
  Adjusted BoxTerrain border texture coordinate deifnition to be more consistant with pattern texture coordinate definition

18 Dec 2019
  add ManagedTexture to shader.js exports
  
16 Dec 2019
  Auto-resize DOM elements managed by the Display when the window is resized (libek.js).

11 Dec 2019
  Fixed window size errors in putFloatingElement (util.js)

10 Dec 1019
  Added a "color" getter/setter to ManagedColor (libek/shader.js)
    This is used to set the color (string, THREE.Vector3, or THREE.Color)

6 Dec 2019
  Adjust deepcopy to return the input value if not an object or array

20-23 Nov 2019
  Internal adjustments to BoxTerrain
    Remove IDs from Terrain and Surface data
    Rework the texture coordinate handling:
      Simplify the arguments that need to get passed to BoxTerrain to define a surface
      Turn texture coordinate specification into an array of texture coordinate specifcations (future-proofing / adjustments for planned multitexturing revision)
      Removed the "8bit" surface specification function (this is now "generic" to BoxTerrain)
    Clean the code somewhat, compact a few things, remove unused/disused properties, and add some better comments.
  rename gen.js to boxterrain.js

16 Nov 2019
  Replaced BoxTerrain surface MergeWith with MergeClass
    Borders between adjacent coplanar tiles (faces of cubes) are based on the MergeClass of a surface.  If two tiles share the same MergeClass,
    then the border is drawn around the tiles.  If two tiles have a differeing MergeClass, then borders will be drawn between them.
    If no MergeClass or the "auto" MergeClass is specified, then the Surface Unique Identifier is used 
      (tiles merge only if they share the same surface specification)
    The previous behavior ("MergeWith") was more flexible (though probably not meritoriously so), but also a lot more complex to configure.
      (MergeWith would Merge tiles of a particular surface type with anything from a specified list of surface IDs)

11 Nov 2019
  Remove the forward vector calculation from the plotter (plot.js), convert it into a utility function, and place it in direction.js
    (for re-use with planar picking)
  Invert the interior NORTH, EAST, SOUTH, and WEST positioning & orientation data used by setOrientation() (direction.js)
    (Fixes an error that became evident after putting it to use for the first time)
  Add flags to loadMuch() and loadZIP() (libek.js) to indicate whether or not newly loaded objects should override existing objects.
  Add function "deepcopy" to util.js  ( recursively copies properties from a source object to a new object )