0.3.0:
  7 Oct 2019
    Added more light, more color, and a sky
    Added a panic-halt function to Zone, to aid in dealing with obscure/quirky misconduct
    Added base surface types to Player, Mouse, and Moose
      (This would have resulted in an obscure quirk, but it raised an exception by requesting an unimplemented animation and got caught. Yay for work not done.)
    
  5 Oct 2019
    Move buttons to the surface they are attached to (puzzle element buttons, not GUI)
    Added a "Creature" abstract type
    Added two implacable foes:  Mouse and Moose
    Various error corrections
    Confused myself for a while by forgetting the distinction between heading and forward vectors.

  4 Oct 2019
    Move asset table to a more appropriate place (libek.assets -> orthotCTL.assets)
    Initial adjustment to make GameData modular.
    Added a puzzle selector
    
  2 Oct 2019
    Converted all scripts to ES6 modules
    Shortened all script names
    Various code consistancy adjustments
    removed libek.direction.opposite (duplicate of direction.invert)

  17-19 Jan 2019
    Partial implementation of gates and buttons
    Modified tick handler to allow deferred actions.
      Deferred actions are functions which run after all other processing has taken place (tick-listeners, player input,movement)
      If deferred action results in additional movement, the movement engine will be re-activated.
      Deferred actions can also trigger additional deferred actions
    added "stress" and "relax" triggers for informing side-attached objects when movement occurs into or out of an adjacent space.
      sideObject.stress() is called when an object enters the adjacent space
      sideObject.relax() is called when an object departs the adjacent space
    Added shear strength to OrthotObject
      shearStrength is a per-side strength value to used when the object presses against adjacent side-attached objects
      Smaller objects which do not press against adjacent objects (player, creatures, items)
      Large box-like objects should set a numeric value
      Oddly shaped objects should set an array containing the shearing strength value for each side.
  14 Jan 2019
    Fixed force dependency to account for multiple forces dependent upon one
    Fixed a sliding problem
    Reset button no longer steals focus.
    Re-enable an unchecked collision
    Added loop-crashing logic (to resolve loops of moving objects)
  12 Jan 2019
    Revised movement dependency solver
  9 Jan 2019
    Player now slides on ice
    Partial fix for broken complex collision handling [and knowledge of where the rest of the breakage takes place]
  7-8 Jan 2019
    Movement behavior of simple objects has been standardized and is defined and controlled by simple properties:
       surface type (which gets paired up with an adjacent surface to become a surface interaction)
       strength of propagated force (strength of force applied to the next object in the line-of-fire)
       force propagation threshold (strength of force needed for the object to react)    
    Added First-person view (with program-controlled and mouse-controlled sub-modes)
    Added ice-blocks and ice-floors
    Adjusted key/lock reticle logic to always pick a contrasting color (uses the hsl hue component only now).
    adjusted a few enumerations
  5 Jan 2019
    The movement engine has been modified to allow multiple forces to be applied to a single object and used contingentially
      The movement engine will propagate all applied forces, but only one of the forces can result in the object moving.
      The movement engine will use force priority and force strength to select the best force to apply to the object.
      If the object does not move under the influence of the highest priority force, it will select a lower priority force (and continue with lower and lower
        priority forces until the object either moves or until all attempts to move the object have failed)
    All objects have been modified to use force priority to manage gravity instead of object state
    Fixed an animation glitch (down-ramp to lower down-ramp)
    An object which is influenced by gravity and which is positioned above a horizontally aligned portal can now push away an object which is obstructing
      a vertically aligned output portal (doing this correctly was the main reason for modifying the movement engine).  
  4 Jan 2019
    Fixed several defects in indirect force portal handling which where caused by the "Eketek-made-sweeping-changes-then-completely-forgot-to-test-it" problem
  3 Jan 2019
    The concept of "Indirect Force" has been formalized and added to the movement engine and is now the main mechanism through which gravity and riding is handled.
      (this replaces various informal hacks and is a major improvement over the original design)
    Added crates.
    Keys now ride on top of moving objects
    Old stack-falling logic has been removed and replaced with more consistant handling based on indirect forces.
  2 Jan 2019
    Mousing over the "key" GUI element now causes the game to temporarilly place illustrative reticles around all locks which that key is able to unlock.
  1 Jan 2019
    WASD controls
    puzzle-reset button
    Key and Lock puzzle elements
    Added a continuous multi-axail rotation animation to orthot.AnimateBlock (to be used for items that can be picked up by an orthot.Player)
    orthot.OrthotObject and orthot.StandardObject have been changed from prototype objects to object augmentation functions.
      (Mainly to allow objects to pass their functions around as delegates)
    orthot.Zone changed to call delegate functions tor per-tick updates instead of object.update()
    Removed libek.ui (opted instead to use DOM elements for GUI purposes)
    Added a colorized-image-dropshadow GUI button generator (renderCTL.build_domOBJ)
    Added logic for tooltips and graphical visualizations which are triggered by mousing over objects (both in the 3D scene and GUI elements)
    Various code consistancy adjustments
    disabled timing output from THREE.Objectloader.js
    Removed an unintended puzzle solution
    Added a changelog.  